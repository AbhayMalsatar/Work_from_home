{"ast":null,"code":"var _jsxFileName = \"/Users/abhaymalsatar/Office/crud_firebase/src/Components/SearchDelete.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport firebase from './FireBaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchDataComponent = () => {\n  _s();\n  const [data, setData] = useState({}); // State to store the fetched data\n\n  useEffect(() => {\n    // Create a reference to your database path\n    const dbRef = firebase.database().ref('your-database-path');\n\n    // Fetch the data\n    dbRef.on('value', snapshot => {\n      const dbData = snapshot.val();\n      setData(dbData); // Set the data in state\n    });\n\n    // Cleanup the listener on unmount\n    return () => dbRef.off();\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(FetchDataComponent, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n_c = FetchDataComponent;\nexport default FetchDataComponent;\nvar _c;\n$RefreshReg$(_c, \"FetchDataComponent\");","map":{"version":3,"names":["React","useState","useEffect","firebase","jsxDEV","_jsxDEV","FetchDataComponent","_s","data","setData","dbRef","database","ref","on","snapshot","dbData","val","off","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhaymalsatar/Office/crud_firebase/src/Components/SearchDelete.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport firebase from './FireBaseConfig';\n\nconst FetchDataComponent = () => {\n  const [data, setData] = useState({}); // State to store the fetched data\n\n  useEffect(() => {\n    // Create a reference to your database path\n    const dbRef = firebase.database().ref('your-database-path');\n\n    // Fetch the data\n    dbRef.on('value', (snapshot) => {\n      const dbData = snapshot.val();\n      setData(dbData); // Set the data in state\n    });\n\n    // Cleanup the listener on unmount\n    return () => dbRef.off();\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return (\n    <div>\n      {/* Render your data here */}\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n};\n\nexport default FetchDataComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,KAAK,GAAGP,QAAQ,CAACQ,QAAQ,CAAC,CAAC,CAACC,GAAG,CAAC,oBAAoB,CAAC;;IAE3D;IACAF,KAAK,CAACG,EAAE,CAAC,OAAO,EAAGC,QAAQ,IAAK;MAC9B,MAAMC,MAAM,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;MAC7BP,OAAO,CAACM,MAAM,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC;;IAEF;IACA,OAAO,MAAML,KAAK,CAACO,GAAG,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEZ,OAAA;IAAAa,QAAA,eAEEb,OAAA;MAAAa,QAAA,EAAMC,IAAI,CAACC,SAAS,CAACZ,IAAI,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvBID,kBAAkB;AAAAmB,EAAA,GAAlBnB,kBAAkB;AAyBxB,eAAeA,kBAAkB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}